name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --verbose

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        run: rustup update nightly && rustup default nightly && rustup component add rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        run: rustup update stable && rustup default stable && rustup component add clippy
      - uses: Swatinem/rust-cache@v2
      - name: Run Clippy
        run: cargo clippy -- -D warnings
